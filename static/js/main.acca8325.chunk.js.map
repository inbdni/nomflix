{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Components/Footer.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TvPresenter.js","Routes/TV/index.js","Routes/TV/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","MovieApi","get","id","appent_to_response","term","query","encodeURIComponent","TvApi","Container","div","Title","span","Grid","Section","title","children","prototypes","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","imageUrl","rating","year","isMovie","require","default","length","substring","Footer","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","substr","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","TvPresenter","topRated","airingToday","show","original_name","first_air_date","TvContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","isTv","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","className","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acca8325.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n\tcolor: white;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 50px;\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: rgba(20, 20, 20, 0.8);\n\tz-index: 10;\n\tbox-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n\tdisplay: flex;\n`;\n\nconst Item = styled.li`\n\twidth: 70px;\n\theight: 50px;\n\ttext-align: center;\n\tborder-bottom: 3px solid ${props => (props.current ? \"pink\" : \"transparent\")};\n\ttransition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n\theight: 50px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport default withRouter(({ location: {pathname} }) => (\n\t<Header>\n\t\t\t<List>\n\t\t\t\t<Item current={pathname === \"/\"}>\n\t\t\t\t\t<SLink to=\"/\">Movies</SLink>\n\t\t\t\t</Item>\n\t\t\t\t<Item current={pathname === \"/tv\"}>\n\t\t\t\t\t<SLink to=\"/tv\">TV</SLink>\n\t\t\t\t</Item>\n\t\t\t\t<Item current={pathname === \"/search\"}>\n\t\t\t\t\t<SLink to=\"/search\">Search</SLink>\n\t\t\t\t</Item>\n\t\t\t</List>\n\t</Header>\n));","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"b1a20724bcc4a14824f59a8a0b78ab0b\",\n        language: \"en-US\"\n    }\n});\n\nexport const MovieApi = {\n    popular: () => api.get(\"movie/popular\"),\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    movieDetail: (id) => api.get(`movie/${id}`, {\n        params: {\n            appent_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const TvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    tvDetail: (id) => api.get(`tv/${id}`, {\n        params: {\n            appent_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n\tpadding: 10px;\n\tmargin-top: 30px;\n`;\n\nconst Title = styled.span`\n\tfont-size: 24px;\n\tfont-weight: 600;\n`;\n\nconst Grid = styled.div`\n\tmargin-top: 25px;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(auto-fill, 125px);\n\tgrid-gap: 25px;\n`;\n\nconst Section = ({\n\ttitle, children\n}) => (\n\t<Container>\n\t\t<Title>{title}</Title>\n\t\t<Grid>{children}</Grid>\n\t</Container>\n);\n\nSection.prototypes = {\n\ttitle: PropTypes.string.isRequired,\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node\n\t])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n\tpadding-top: 100px;\n\theight: 100vh;\n\twidth: 100vw;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nexport default () => <Container>\n\t<span role=\"img\" aria-label=\"Loading\">Loading...</span>\n</Container>","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div `\n\twidth: 100vw;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nconst Text = styled.span `\n\tcolor: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => <Container>\n    <Text color={color}>{text}</Text>\n</Container>;\n\nMessage.propTypes = {\n\ttext: PropTypes.string.isRequired,\n\tcolor: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n  align-content: center;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst Rating = styled.span`\n  display: block;  \n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst Year = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  color: #95a5a6;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default} />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating} / 10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 16 ? `${title.substring(0, 16)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n\tmargin-top: 50px;\n\tmargin-bottom: 30px;\n\ttext-align: center;\n\thr {\n\t\tmargin: 20px;\n\t\tborder-color: #555555;\n\t}\n\tspan {\n\t\tcolor: #999999;\n\t}\n`;\n\nconst Footer = () => (\n  <Container><hr></hr>\n  <span>@Nomflix</span>\n  </Container>\n);\n\nexport default Footer;","import React, {Children} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Footer from \"Components/Footer\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div `\n\tpadding: 10px;\n`;\n\nconst HomePresenter = ({nowPlaying, upcoming, popular, loading, error}) => (\n    <div>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n        {\n            loading\n                ? <Loader/>\n                : <div>\n                        <Container>\n                            {\n                                nowPlaying && nowPlaying.length > 0 && (\n                                    <Section title=\"Now Playing\">\n                                        {\n                                            nowPlaying.map(movie => (\n                                                <Poster\n                                                    id={movie.id}\n                                                    imageUrl={movie.poster_path}\n                                                    title={movie.original_title}\n                                                    rating={movie.vote_average}\n                                                    year={movie\n                                                        .release_date\n                                                        .substr(0, 4)}\n                                                    isMovie={true}/>\n                                            ))\n                                        }\n                                    </Section>\n                                )\n                            }\n                            {\n                                upcoming && upcoming.length > 0 && (\n                                    <Section title=\"Upcoming\">\n                                        {\n                                            upcoming.map(movie => (\n                                                <Poster\n                                                    id={movie.id}\n                                                    imageUrl={movie.poster_path}\n                                                    title={movie.original_title}\n                                                    rating={movie.vote_average}\n                                                    year={movie\n                                                        .release_date\n                                                        .substr(0, 4)}\n                                                    isMovie={true}/>\n                                            ))\n                                        }\n                                    </Section>\n                                )\n                            }\n                            {\n                                popular && popular.length > 0 && (\n                                    <Section title=\"Popular\">\n                                        {\n                                            popular.map(movie => (\n                                                <Poster\n                                                    id={movie.id}\n                                                    imageUrl={movie.poster_path}\n                                                    title={movie.original_title}\n                                                    rating={movie.vote_average}\n                                                    year={movie\n                                                        .release_date\n                                                        .substr(0, 4)}\n                                                    isMovie={true}/>\n                                            ))\n                                        }\n                                    </Section>\n                                )\n                            }\n                            {error && <Message text={error} color=\"#ed5942\"/>}\n                        </Container>\n                        <Footer/>\n                    </div>\n        }\n    </div>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import { MovieApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: {\n                    results: nowPlaying\n                }\n            } = await MovieApi.nowPlaying();\n            const {\n                data: {\n                    results: upcoming\n                }\n            } = await MovieApi.upcoming();\n            const {\n                data: {\n                    results: popular\n                }\n            } = await MovieApi.popular();\n            this.setState({\n                nowPlaying: nowPlaying,\n                upcoming: upcoming,\n                popular: popular\n            });\n        } catch  {\n            this.setState({error: \"Can't find movie information.\"})\n        } finally {\n            this.setState({loading: false})\n        }\n    }\n\n    render() {\n        const {nowPlaying, upcoming, popular, loading, error} = this.state;\n        console.log(this.state);\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                loading={loading}\n                error={error}/>\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Footer from \"Components/Footer\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 10px;\n`;\n\nconst TvPresenter = ({topRated, popular, airingToday, loading, error}) => (\n    <div>\n    <Helmet>\n        <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading\n    ? <Loader/>\n    : <div><Container>\n        {\n            topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {\n                            topRated.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average}\n                                    year={show\n                                        .first_air_date\n                                        .substring(0, 4)}/>\n                            ))\n                    }\n                </Section>\n            )\n        }\n        {\n            popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    {\n                            popular.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average}\n                                    year={show\n                                        .first_air_date\n                                        .substring(0, 4)}/>\n                            ))\n                    }\n                </Section>\n            )\n        }\n        {\n            airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today\">\n                    {\n                        airingToday.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show\n                                    .first_air_date\n                                    .substring(0, 4)}/>\n                        ))\n                    }\n                </Section>\n            )\n        }\n        {error && <Message text={error} color=\"#ed5942\"/>}\n    </Container>\n    <Footer/></div>}</div>);\n\nTvPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TvPresenter;","import TvContainer from \"./TvContainer\";\n\nexport default TvContainer;","import { TvApi } from \"api\";\nimport React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: {\n                    results: topRated\n                }\n            } = await TvApi.topRated();\n            const {\n                data: {\n                    results: popular\n                }\n            } = await TvApi.popular();\n            const {\n                data: {\n                    results: airingToday\n                }\n            } = await TvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        } catch  {\n            this.setState({error: \"Can't find TV information.\"})\n        } finally {\n            this.setState({loading: false})\n        }\n    }\n    render() {\n        const {topRated, popular, airingToday, loading, error} = this.state;\n        console.log(this.state);\n        return (\n            <TvPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}/>\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Footer from \"Components/Footer\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n\tpadding: 10px;\n    min-height: calc(100vh - 160px);\n`;\n\nconst Form = styled.form `\n    margin-bottom: 50px;\n    display: block;\n    background-color: #222222;\n`;\n\nconst Input = styled.input `\n    all: unset;\n    font-size: 24px;\n    width: 80%;\n    padding: 10px;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    searchTerm,\n    updateTerm,\n    handleSubmit,\n    loading,\n    error\n}) => (\n    <div>\n    <Helmet>\n        <title>Search | Nomflix</title>\n    </Helmet>\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder=\"Search Movies or TV Shows...\"\n                value={searchTerm}\n                onChange={updateTerm}/>\n        </Form>\n        {\n            loading\n                ? <Loader/>\n                : (\n                    <div>\n                        {\n                            movieResults && movieResults.length > 0 && (\n                                <Section title=\"Movie Results\">\n                                    {\n                                        movieResults.map(movie => (\n                                            <Poster\n                                                key={movie.id}\n                                                id={movie.id}\n                                                imageUrl={movie.poster_path}\n                                                title={movie.original_title}\n                                                rating={movie.vote_average}\n                                                year={movie\n                                                    .release_date && movie\n                                                    .release_date\n                                                    .substring(0, 4)}\n                                                isMovie={true}/>\n                                        ))\n                                    }\n                                </Section>\n                            )\n                        }\n                        {\n                            tvResults && tvResults.length > 0 && (\n                                <Section title=\"TV Show Results\">\n                                    {\n                                        tvResults.map(show => (\n                                            <Poster\n                                                key={show.id}\n                                                id={show.id}\n                                                imageUrl={show.poster_path}\n                                                title={show.original_name}\n                                                rating={show.vote_average}\n                                                year={show\n                                                    .first_air_date && show\n                                                    .first_air_date\n                                                    .substring(0, 4)}/>\n                                        ))\n                                    }\n                                </Section>\n                            )\n                        }\n                        {error && <Message text={error} color=\"#ed5942\"/>}\n                        {movieResults && movieResults.length === 0 && tvResults && tvResults.length === 0 && <Message text=\"Nothing Found\" color=\"#95a5a6\"/>}\n                    </div>\n                )\n        }\n    </Container>\n    <Footer/>\n    </div>\n)\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    updateTerm: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import { MovieApi, TvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = event => {\n        const {\n            target: {value}\n        } = event;\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {\n                data: {results: movieResults }\n            } = await MovieApi.search(searchTerm);\n            const {\n                data: {results: tvResults}\n            } = await TvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n            this.setState({error: \"Can't find results.\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    render() {\n        const {movieResults, tvResults, searchTerm, handleSubmit, loading, error} = this.state;\n        console.log(this.state);\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                updateTerm={this.updateTerm}\n                handleSubmit={this.handleSubmit}\n                loading={loading}\n                error={error}/>\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div `\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div `\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div `\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div `\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div `\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3 `\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div `\n  margin: 20px 0;\n`;\n\nconst Item = styled.span ``;\n\nconst Divider = styled.span `\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p `\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({result, loading, error}) => loading\n    ? (    <div><Helmet>\n        <title>Loading | Nomflix</title>\n    </Helmet>\n\t<Loader/></div>)\n    : (\n        <div><Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name}{\" \"} | Nomflix</title>\n    </Helmet><Container>\n            <Backdrop\n                bgImage={result.poster_path\n                    ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n                    : null}/>\n            <Content>\n                <Cover\n                    bgImage={result.poster_path\n                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                        : require(\"../../assets/noPosterSmall.png\").default}/>\n                <Data>\n                    <Title>\n                        {\n                            result.original_title\n                                ? result.original_title\n                                : result.original_name\n                        }\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {\n                                result.release_date\n                                    ? result\n                                        .release_date\n                                        .substring(0, 4)\n                                    : result.first_air_date\n                                        ? result\n                                            .first_air_date\n                                            .substring(0, 4)\n                                        : \"unknown\"\n                            }\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {\n                                result.runtime\n                                    ? `${result.runtime} min`\n                                    : result.episode_run_time\n                                        ? `${result.episode_run_time[0]} min`\n                                        : \"unknown\"\n                            }\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {\n                                result.genres\n                                    ? result.genres.length > 0\n                                        ? (result.genres.map(\n                                            (genre, index) => index === result.genres.length - 1\n                                                ? genre.name\n                                                : `${genre.name} / `\n                                        ))\n                                        : \"unknown\"\n                                    : null\n                            }\n                        </Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                </Data>\n            </Content>\n\t\t\t{error && <Message text={error} color=\"#ed5942\"/>}\n        </Container></div>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import {MovieApi, TvApi} from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {location: {\n                pathname\n            }} = props;\n        this.state = {\n            result: null,\n            loading: true,\n            error: null,\n            isMovie: pathname.includes(\"/movie/\"),\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: {\n                    id\n                }\n            },\n            history: {\n                push\n            }\n        } = this.props;\n        const {isMovie, isTv} = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result;\n        try {\n            if (isMovie) {\n                ({data: result} = await MovieApi.movieDetail(parsedId));\n            } else {\n                ({data: result} = await TvApi.tvDetail(parsedId));\n            }\n        } catch  {\n            this.setState({error: \"Can't find anything.\"});\n        } finally {\n            this.setState({loading: false, result})\n        }\n    }\n\n    render() {\n        const {result, loading, error} = this.state;\n        console.log(this.state);\n        return (<DetailPresenter result={result} loading={loading} error={error}/>);\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home/index\";\nimport TV from \"Routes/TV/index\";\nimport Search from \"Routes/Search/index\";\nimport Detail from \"Routes/Detail/index\";\n\nexport default () => (\n\t<Router>\n\t\t<Header />\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t<Route path=\"/tv\" exact component={TV} />\n\t\t\t<Route path=\"/search\" component={Search} />\n\t\t\t<Route path=\"/movie/:id\" component={Detail} />\n\t\t\t<Route path=\"/show/:id\" component={Detail} />\n\t\t\t<Redirect from=\"*\" to=\"/\" />\n\t\t</Switch>\n\t</Router>\n)","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyle = createGlobalStyle`\n\t${reset};\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: inherit;\n\t}\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n\tbody {\n\t\tfont-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\t\tfont-size: 12px;\n\t\tbackground-color: rgba(20, 20, 20, 1);\n\t\tcolor: white;\n\t\tmargin-top: 50px; \n\t}\n`;\n\nexport default globalStyle;","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyle from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n      <GlobalStyle />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}